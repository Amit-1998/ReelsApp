{"version":3,"sources":["firebase.js","AuthProvider.js","Components/videoCard.jsx","Components/home.jsx","Components/login.jsx","Components/profile.jsx","App.js","index.js"],"names":["firebase","initializeApp","config","provider","auth","GoogleAuthProvider","firestore","storage","authContext","createContext","AuthProvider","props","useState","user","setUser","loading","setLoading","useEffect","unsub","onAuthStateChanged","a","displayName","email","uid","photoURL","docRef","collection","doc","get","exists","set","posts","Provider","value","children","VideoCard","currUserLiked","playing","setPlaying","commentBoxOpen","setCommentBoxOpen","currUserComment","setCurrUserComment","comments","setComments","useContext","data","likes","includes","commentsArr","arr","i","length","commentDoc","push","f","className","name","class","onClick","e","likesArr","filter","el","id","update","map","src","photo","comment","type","onChange","currentTarget","add","commentId","postDoc","postCommentsArr","pause","play","loop","url","Home","setPosts","history","useHistory","onSnapshot","querySnapshot","docArr","docs","postarr","to","signOut","videoObj","files","size","alert","split","uploadTask","ref","Date","now","put","on","snapshot","getDownloadURL","userDoc","console","log","Login","signInWithPopup","Profile","userKipostskiArr","setArr","docSnapshot","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16da8211.chunk.js","sourcesContent":["import firebase from \"firebase/app\"; // hme apne app ko firebase se integrate karna hai, for that firebase containes many modules unme se app is one of them , we require basic app module\r\n// app module ko hamne firebase variable mein import kar liya, ham firebase ki jagah kuch bhi name de sakte hai\r\n\r\nimport config from \"./config.json\";\r\n\r\nimport \"firebase/auth\"; //ye auth vaali chis upar bane firebase variable chali gayi\r\nimport \"firebase/firestore\"; //ye firestore vaali chis upar bane firebase variable chali gayi\r\nimport \"firebase/storage\";\r\n\r\n// const firebaseConfig = {\r\n//     apiKey: \"AIzaSyD4-5bUvVckDAea5xJlbZfIv_ijUoPqofI\",\r\n//     authDomain: \"reelsapp-6e42a.firebaseapp.com\",\r\n//     projectId: \"reelsapp-6e42a\",\r\n//     storageBucket: \"reelsapp-6e42a.appspot.com\",\r\n//     messagingSenderId: \"658658564915\",\r\n//     appId: \"1:658658564915:web:e4cf67e54dd74543ac7c46\"\r\n// };\r\n\r\n// Firebase ke platform par lakho Project files hoti hai to firebase ko kaise pta chalega ki aap konse project ke saath apna React App connect karna chah rahe ho\r\n// to aisliye aapko us Project File ki config files ka code idhar dena hota hai jo ki unique hota hai for each project on Firebase platform\r\n\r\n// config files hamne firebase ko dedi\r\nfirebase.initializeApp(config); // is line se jo hamara React App hai vo firebase ke project(jo hamne uske platform par create kara the) se connect ho gya \r\n\r\n// flag => using google\r\nlet provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n// make an authentication object\r\n// let auth = firebase.auth(); kuki mujhe ise export karna ha to ise aise likhenge\r\n// object jiske ander login/logout/signup\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nexport const storage = firebase.storage();\r\n\r\nexport const signInWithGoogle = ()=>{\r\n    // ki mujhe popup ko use karke signup krna hai with google\r\n    auth.signInWithPopup(provider);\r\n}\r\n\r\nexport default firebase;","import { createContext,useEffect, useState } from \"react\";\r\nimport { auth } from \"./firebase\";\r\n// let authContext = createContext();\r\nimport { firestore } from \"./firebase\";\r\n\r\n\r\nexport const authContext = createContext();\r\n\r\nlet AuthProvider = (props)=>{ // isko props milenge\r\n     \r\n    // make states\r\n    let [user, setUser] = useState(null); // initially user ki state null hogi\r\n    let [loading, setLoading] = useState(true);\r\n\r\n    useEffect(()=>{\r\n        let unsub = auth.onAuthStateChanged( async (user)=>{\r\n              if(user){\r\n                  let { displayName, email, uid, photoURL} = user;\r\n\r\n                  let docRef = firestore.collection(\"users\").doc(uid); //google vaale user ki uid se fake object bnaya\r\n\r\n                  let documentSnapshot = await docRef.get();\r\n                  if(!documentSnapshot.exists){\r\n                      // actual mein data set kar dijiye uske document mein jaake\r\n                      docRef.set( {displayName, email, photoURL, posts: []} )\r\n                    //  \"user\" collection mein jo pehle fake document the  ab usko actual mein save kar dia using set property of docRef\r\n                    \r\n                    \r\n                  }\r\n\r\n                  setUser( { displayName, email, uid, photoURL, posts: []} );\r\n              }\r\n              else{\r\n                  setUser(null);\r\n              }\r\n\r\n              setLoading(false);\r\n        });\r\n\r\n        // cleanUp function return karenge, jo ki tabhi chalega jab hamara ye comp unMount ho jayega kuki hamare paas dusra useEffect nhi hai\r\n        return ()=>{\r\n             unsub();\r\n        };\r\n\r\n    },[]);\r\n\r\n    return ( //yha par vo top comp is AuthProvider (w.r.t) propsdrilling)\r\n        <authContext.Provider value={user}>\r\n            { !loading && props.children }\r\n        </authContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthProvider;","import { useContext, useEffect, useState } from \"react\";\r\nimport { authContext } from \"../AuthProvider\";\r\nimport { firestore } from \"../firebase\";\r\nimport \"./videoCard.css\"\r\n\r\nlet VideoCard = (props) => {\r\n\r\n    let [playing, setPlaying] = useState(false);\r\n    let [commentBoxOpen, setCommentBoxOpen] = useState(false);\r\n    let [currUserComment, setCurrUserComment] = useState(\"\");\r\n    let [comments, setComments] = useState([]);\r\n\r\n    let user = useContext(authContext);\r\n    \r\n    let currUserLiked;\r\n    if(user){\r\n        currUserLiked = props.data.likes.includes(user.uid);\r\n    }\r\n\r\n    useEffect(()=>{\r\n         let f = async ()=>{\r\n             let commentsArr = props.data.comments;\r\n             let arr = [];\r\n\r\n             for(let i=0; i<commentsArr.length; i++){\r\n                 let commentDoc = await firestore.collection(\"comments\").doc(commentsArr[i]).get();\r\n\r\n                 arr.push(commentDoc.data());\r\n             }\r\n             setComments(arr);\r\n         }\r\n        f();\r\n    },[props]);\r\n\r\n    return (\r\n        <div className=\"video-card\">\r\n            <p className=\"video-card-username\">{props.data.name}</p>\r\n\r\n            <span className=\"video-card-music\">\r\n                <span class=\"material-icons\"> music_note</span>\r\n                <marquee>some song</marquee>\r\n            </span>\r\n\r\n            <span onClick={(e)=>\r\n                    { if(commentBoxOpen){\r\n                          setCommentBoxOpen(false);\r\n                        }\r\n                      else{\r\n                        setCommentBoxOpen(true);\r\n                      }\r\n                    }\r\n                  }\r\n              class=\"material-icons-outlined video-card-comment\">chat\r\n            </span>\r\n\r\n            <span class=\"material-icons-outlined video-card-like\" onClick={()=>{\r\n                 let likesArr = props.data.likes;\r\n                    if(currUserLiked){\r\n                         likesArr = likesArr.filter((el)=> el!=user.uid);\r\n                    }  \r\n                    else{\r\n                         likesArr.push(user.uid);    \r\n                    }\r\n                    firestore.collection(\"posts\").doc(props.data.id).update({likes:likesArr});\r\n               }}>\r\n                {\r\n                    // (props.data.likes.includes(user.uid))?\"favorite\":\"favorite_border\"\r\n                    currUserLiked?\"favorite\":\"favorite_border\"\r\n                }\r\n            </span>\r\n            \r\n            {commentBoxOpen ? \r\n                <div className=\"video-card-comment-box\">\r\n                    <div className=\"actual-comments\">\r\n                        {  comments.map( (el)=>{\r\n                                return (\r\n                                        <div className=\"post-user-comment\">\r\n                                            <img src= {el.photo} />\r\n                                            <div>\r\n                                                <h5>{el.name}</h5>\r\n                                                <p>{el.comment}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                );\r\n                            }) \r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"comment-form\">\r\n                        {/*jo bhi mein input tag me likhunga wo meri state mein save hota rahega*/}\r\n                        <input type=\"text\" value = {currUserComment} onChange={ (e)=>{setCurrUserComment(e.currentTarget.value); } } />\r\n                        <button onClick={ // jo current comment state mein hai usey comments collection mein add kar rha hai\r\n                            async()=>{\r\n                             let docRef = await firestore.collection(\"comments\").add( {name: user.displayName, comment: currUserComment, photo: user.photoURL} );       \r\n                            \r\n                             setCurrUserComment(\"\");\r\n                             // to jo abhi comment maine add kra hai uske document ke reference se wo comment ka document\r\n                             let doc = await docRef.get();\r\n                             // us document ki id nikal lo\r\n                             let commentId = doc.id;\r\n                             \r\n                             // ye jo video card hai uska post document nikalo\r\n                             let postDoc = await firestore.collection(\"posts\").doc(props.data.id).get();\r\n                            \r\n                             // us document mein comment arr hai wahapr jo apne apni coment add kra hai uski id insert krdo\r\n                             let postCommentsArr = postDoc.data().comments;\r\n                             postCommentsArr.push(commentId);\r\n                            \r\n                             // ab ye comments arr firestore mein jakr update krdo\r\n                             await firestore.collection(\"posts\").doc(props.data.id).update({comments: postCommentsArr})\r\n\r\n                        }} >Post</button>\r\n                    </div>\r\n                </div> : \"\"\r\n            }\r\n\r\n            <video onClick={(e) => {\r\n                if (playing) {\r\n                    e.currentTarget.pause();\r\n                    setPlaying(false);\r\n                }\r\n                else {\r\n                    e.currentTarget.play();\r\n                    setPlaying(true);\r\n                }\r\n              }\r\n            }\r\n            loop src= {props.data.url} className=\"video-card-video\">\r\n            </video>\r\n        \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VideoCard;","import { useContext, useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { authContext } from \"../AuthProvider\";\r\nimport { auth, storage, firestore } from \"../firebase\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport \"./home.css\";\r\nimport VideoCard from \"./videoCard\";\r\n\r\nlet Home = () => {\r\n\r\n    let user = useContext(authContext);\r\n    let [posts, setPosts] = useState([]);\r\n    \r\n    let history = useHistory();\r\n\r\n    // useEffect(() => {\r\n        \r\n    //     let unsub = firestore.collection(\"posts\").onSnapshot((querySnapshot) => {\r\n    //         let docArr = querySnapshot.docs;\r\n\r\n    //         let arr = [];\r\n\r\n    //         for (let i = 0; i < docArr.length; i++) {\r\n    //             arr.push({ id: docArr[i].id, ...docArr[i].data(), }); // id isliye dalvayi taki niche posts collections par map maar paye to vha par props mein dena hai\r\n    //         }\r\n    //         setPosts(arr);\r\n    //     });\r\n\r\n    //     return () => {\r\n    //         unsub();\r\n    //     }\r\n\r\n    // }, [])\r\n\r\n    useEffect( () => {\r\n        \r\n        \r\n        // let docRef = firestore.collection(\"users\").doc(user.uid);\r\n        // let docSnapshot = await docRef.get();\r\n        // let actualUserDoc = docSnapshot.data();\r\n        // // let postarr = actualUserDoc.posts;\r\n\r\n        let unsub = firestore.collection(\"posts\").onSnapshot((querySnapshot) => {\r\n            let docArr = querySnapshot.docs;\r\n\r\n            let arr = [];\r\n            let postarr = [];\r\n\r\n            for (let i = 0; i < docArr.length; i++) {\r\n                arr.push({ id: docArr[i].id, ...docArr[i].data(), }); // id isliye dalvayi taki niche posts collections par map maar paye to vha par props mein dena hai\r\n                postarr.push(docArr[i].id);\r\n            }\r\n            \r\n            firestore.collection(\"users\").doc(user.uid).update({posts: postarr});\r\n            setPosts(arr);\r\n        });\r\n\r\n        return () => {\r\n            unsub();\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            {user ? \"\" : <Redirect to=\"./login\" />}\r\n\r\n            <div className=\"video-container\">\r\n                    <div className=\"Profile-navbar\">\r\n                            <div onClick={()=>{ history.push(\"/profile\"); }} className=\"profile-icon\">Profile</div>\r\n                            <p>My Posts</p>\r\n                    </div>\r\n\r\n                    <div className=\"video-Element\">\r\n                        {\r\n                            posts.map((el) => { return <VideoCard key={el.id} data={el} /> })\r\n                        }\r\n                    </div>\r\n            </div>\r\n\r\n            <button className=\"home-logout-btn\" onClick={() => { auth.signOut(); }}>Logout</button>\r\n            <input type=\"file\" onClick={(e) => { e.currentTarget.value = null }} onChange={(e) => {\r\n                //   console.log(e.currentTarget.files); gives files object\r\n                let videoObj = e.currentTarget.files[0];\r\n                let { name, size, type } = videoObj;\r\n\r\n                size = size / 1000000; // in mb\r\n                if (size > 40) {\r\n                    alert(\"File Size exceeds 40mb\");\r\n                    return;\r\n                }\r\n\r\n\r\n                type = type.split(\"/\")[0]\r\n                if (type !== \"video\") {\r\n                    alert(\"Please upload a video file\");\r\n                    return;\r\n                }\r\n\r\n                let uploadTask = storage.ref(`posts/${user.uid}/${Date.now() + \"-\" + name}`).put(videoObj); // gives us an event\r\n                // uploadTask.on(\"state_changed\", null, null, () => {\r\n                //     uploadTask.snapshot.ref.getDownloadURL().then((url) => {\r\n                //         // console.log(url);\r\n                //         // firestore.collection(\"posts\").add({ name: user.displayName, likes: [], comments: [], url }); // add karna bhi ek promisified kaam hota hai\r\n                        \r\n                //         let f = async()=>{\r\n                //               let docRef = await firestore.collection(\"posts\").add({ name: user.displayName, likes: [], comments: [], url }); // add karna bhi ek promisified kaam hota hai\r\n                //               console.log(docRef);\r\n                //               let doc = await docRef.get();\r\n                //               let postkiId = doc.id;\r\n                //               let userDoc = await firestore.collection(\"users\").doc(user.uid).get();\r\n                //               let postsArr = userDoc.data().posts;\r\n                //               postsArr.push(postkiId);\r\n                //               await firestore.collection(\"users\").doc(user.uid).update({posts: postsArr});\r\n\r\n                //         }\r\n                //         f();\r\n                //     })\r\n                // })\r\n\r\n                uploadTask.on(\"state_changed\", null, null, async () => {\r\n                    let url = await uploadTask.snapshot.ref.getDownloadURL();\r\n                    // console.log(url);\r\n                    let docRef = await firestore.collection(\"posts\").add({ name: user.displayName, likes: [], comments: [], url });\r\n                    // console.log(docRef);\r\n                    let postKiId = docRef.id;\r\n                    // console.log(postKiId);\r\n                    let userDoc = await firestore.collection(\"users\").doc(user.uid).get();\r\n                    console.log(userDoc);\r\n                    console.log(userDoc.data());\r\n                    // let postsArr = userDoc.data().posts;\r\n                    // console.log(postsArr);\r\n\r\n                })\r\n\r\n\r\n\r\n            }} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;","import { useContext, useEffect } from \"react\";\r\nimport {auth, signInWithGoogle} from \"../firebase\";\r\nimport { authContext } from \"../AuthProvider\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport \"./login.css\";\r\n\r\nlet Login = ()=>{\r\n    \r\n    let user = useContext(authContext); // jo ahamne createContext se bnaya the vo useContext mein paas kra  \r\n    console.log(user);\r\n\r\n    // useEffect(()=>{\r\n    //     auth.onAuthStateChanged( (user)=>{\r\n    //           console.log(user);\r\n    //     });\r\n    // },[]);\r\n\r\n    return(\r\n        <>\r\n            {user ? <Redirect to=\"/\" /> : \"\"}\r\n            <button onClick={()=>{ signInWithGoogle(); }} class=\"btn btn-primary m-4\">Login with Google</button>\r\n    \r\n            \r\n        </>\r\n    );\r\n}\r\nexport default Login;","import { useContext, useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { authContext } from \"../AuthProvider\";\r\nimport { auth, firestore, storage } from \"../firebase\";\r\nimport \"./profile.css\";\r\n\r\n// const CurrLoggedInUser = auth.currentUser;\r\n// console.log(CurrLoggedInUser);\r\n\r\nlet Profile = ()=>{\r\n    \r\n    let user = useContext(authContext);\r\n    console.log(user);\r\n    // console.log(user.uid);\r\n    let history = useHistory();\r\n\r\n    let [userKipostskiArr,setArr] = useState([]);\r\n    \r\n    useEffect(()=>{\r\n        (async ()=>{\r\n                let docSnapshot = await firestore.collection(\"users\").doc(user.uid).get();\r\n                let postarr = docSnapshot.data().posts;\r\n                setArr(postarr);\r\n                // console.log(postarr);\r\n                // console.log(postarr.length);\r\n    \r\n        })()\r\n\r\n    },[]);\r\n    \r\n\r\n        // console.log(postarr.length);\r\n    // displayName: \"Amit Kumar\"\r\n    // email: \"amitkumar654521@gmail.com\"\r\n    // photoURL: \"https://lh3.googleusercontent.com/a/AATXAJxXINJuutuiRIC892Frr-9HqYcsvxYKj98d5U5z=s96-c\"\r\n    // uid: \"D23uYqSGe7ePQAs5QskrszB5vGf1\"\r\n\r\n    \r\n    // let allPosts = firestore.collection(\"posts\");\r\n    // console.log(allPosts);\r\n    // let totPostsbyUser = 0;\r\n\r\n    // let f = async ()=>{\r\n    //     let querySnapshot = await firestore.collection(\"posts\").get();\r\n    //     for(let i=0; i<querySnapshot.docs.length; i++){\r\n    //         let document = querySnapshot.docs[i].data();\r\n    //         // console.log(document);\r\n    //         if(document.name===user.displayName){\r\n    //             totPostsbyUser++;\r\n    //         }\r\n    //     }\r\n    // }\r\n    // f();\r\n\r\n    return (\r\n        <div className=\"displayInfo\">\r\n              <div className=\"Info\">\r\n                  <h1>{user.displayName}</h1>\r\n                  <p>\r\n                      <h5>No of Posts : {userKipostskiArr.length}</h5>\r\n                  </p>\r\n              </div>\r\n\r\n              <button onClick={()=>{ history.push(\"/\"); }} className=\"GoBack\">Back</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport Home from \"./Components/home\";\nimport Login from \"./Components/login\";\nimport AuthProvider from \"./AuthProvider\";\nimport Profile from \"./Components/profile\";\n\n// import { firestore } from \"./firebase\"\n// import { useEffect } from \"react\";\n\nlet App = ()=> {\n\n//   useEffect(()=>{\n//          // add\n//          firestore.collection(\"users\").add({body: \"This is some value\"});\n\n         // getAll documents/objects\n     //     async function f(){\n     //          let querySnapshot = await firestore.collection(\"users\").get();\n     //          // console.log(querySnapshot.docs); //gives an array which is having all the documents in \"users\" collection\n     //          for(let i=0; i<querySnapshot.docs.length; i++){\n     //              console.log(querySnapshot.docs[i].data());\n                  \n     //          }\n     //     }\n     //     f();\n\n     //    let f = async ()=>{\n     //         // getSingle\n     \n     //         // this gives you the reference of that document\n     //         let docRef = firestore.collection(\"users\").doc(\"fLQNz12NfrWeOBgDtFJG\");\n     //         let documentSnapshot = await docRef.get();\n     //         console.log(documentSnapshot.data());\n     //         console.log(documentSnapshot.id);\n     //      }\n     //    f();\n\n//   }, []);\n\n  return (   \n     <>\n          <AuthProvider>\n               <Router>\n                    <Switch>\n                         <Route exact path=\"/profile\">\n                            <Profile />\n                         </Route>\n                         <Route exact path=\"/login\">\n                              <Login />\n                         </Route>\n                         <Route exact path=\"/\">\n                              <Home />\n                         </Route>\n                    </Switch>\n                    \n               </Router>\n          </AuthProvider>\n          \n     \n     </>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}